| Method                   | Description                | Example                     |
| ------------------------ | -------------------------- | --------------------------- |
| `length()`               | Returns length of string   | `"Hello".length()` â†’ `5`    |
| `isEmpty()`              | Checks if string is empty  | `"".isEmpty()` â†’ `true`     |

| `charAt(int index)`      | Returns character at index | `"Java".charAt(2)` â†’ `'v'`  |
| `codePointAt(int index)` | Unicode of character       | `"A".codePointAt(0)` â†’ `65` |
| Method                          | Description                      | Example                                    |
| ------------------------------- | -------------------------------- | ------------------------------------------ |
| `equals(String s)`              | Checks equality (case-sensitive) | `"Java".equals("java")` â†’ `false`          |
| `equalsIgnoreCase(String s)`    | Case-insensitive comparison      | `"Java".equalsIgnoreCase("java")` â†’ `true` |
| `compareTo(String s)`           | Lexicographically compares       | `"a".compareTo("b")` â†’ `-1`                |
| `compareToIgnoreCase(String s)` | Case-insensitive compare         | `"A".compareToIgnoreCase("a")` â†’ `0`       |
| Method                      | Description              | Example                             |
| --------------------------- | ------------------------ | ----------------------------------- |
| `contains(CharSequence s)`  | Checks substring         | `"Hello".contains("ll")` â†’ `true`   |
| `startsWith(String prefix)` | Checks beginning         | `"Hello".startsWith("He")` â†’ `true` |
| `endsWith(String suffix)`   | Checks ending            | `"Hello".endsWith("lo")` â†’ `true`   |
| `indexOf(String s)`         | First index of substring | `"Java".indexOf("a")` â†’ `1`         |
| `lastIndexOf(String s)`     | Last index of substring  | `"Java".lastIndexOf("a")` â†’ `3`     |
| Method                                  | Description                     | Example                                      |
| --------------------------------------- | ------------------------------- | -------------------------------------------- |
| `substring(int begin)`                  | From index to end               | `"Hello".substring(2)` â†’ `"llo"`             |
| `substring(int begin, int end)`         | Between indexes                 | `"Hello".substring(1,4)` â†’ `"ell"`           |
| `concat(String s)`                      | Joins strings                   | `"Hello".concat(" World")` â†’ `"Hello World"` |
| `replace(char old, char new)`           | Replace character               | `"Java".replace('a','o')` â†’ `"Jovo"`         |
| `replaceAll(String regex, String repl)` | Replace using regex             | `"aa11".replaceAll("\\d","*")` â†’ `"aa**"`    |
| `trim()`                                | Removes leading/trailing spaces | `" Java ".trim()` â†’ `"Java"`                 |
| Method          | Description           | Example                           |
| --------------- | --------------------- | --------------------------------- |
| `toLowerCase()` | Converts to lowercase | `"JAVA".toLowerCase()` â†’ `"java"` |
| `toUpperCase()` | Converts to uppercase | `"java".toUpperCase()` â†’ `"JAVA"` |
| Method                            | Description              | Example                                     |
| --------------------------------- | ------------------------ | ------------------------------------------- |
| `split(String regex)`             | Splits string into array | `"a,b,c".split(",")` â†’ `["a","b","c"]`      |
| `join(CharSequence d, elementsâ€¦)` | Joins with delimiter     | `String.join("-", "a","b","c")` â†’ `"a-b-c"` |
| Method                     | Description               | Example                                        |
| -------------------------- | ------------------------- | ---------------------------------------------- |
| `toCharArray()`            | Converts to char array    | `"Java".toCharArray()` â†’ `['J','a','v','a']`   |
| `valueOf(int x)`           | Converts number to string | `String.valueOf(123)` â†’ `"123"`                |
| `format(String fmt, args)` | Formats string            | `String.format("Hi %s", "John")` â†’ `"Hi John"` |
| Method                  | Description         | Example                          |
| ----------------------- | ------------------- | -------------------------------- |
| `matches(String regex)` | Matches regex       | `"123".matches("\\d+")` â†’ `true` |
| `intern()`              | Adds to String pool | `"Java".intern()`                |
| `repeat(int n)`         | Repeats string      | `"Hi".repeat(3)` â†’ `"HiHiHi"`    |
public class StringMethods {
    public static void main(String[] args) {
        String s = "  Java Programming  ";

        System.out.println(s.length());               // 19
        System.out.println(s.trim());                 // "Java Programming"
        System.out.println(s.toUpperCase());          // "  JAVA PROGRAMMING  "
        System.out.println(s.substring(2, 6));        // "Java"
        System.out.println(s.replace("Java", "C++")); // "  C++ Programming  "
        System.out.println(s.contains("Prog"));       // true
    }
}


ðŸ“˜ Basics

What is a String in Java?

Difference between String, StringBuilder, and StringBuffer.

How are Strings stored in memory (String pool concept)?

What is immutability in Strings?

How to create a String in two ways?

ðŸ“˜ String Methods â€“ Theory

Difference between equals() and ==.

Difference between equals() and equalsIgnoreCase().

What does compareTo() return?

Use of length() method.

What does charAt(int index) return?

ðŸ“˜ String Searching

Find if a string contains a particular substring.

Check if a string starts with "Java".

Check if a string ends with "ing".

Find the first index of a character in a string.

Find the last index of "a" in a string.

ðŸ“˜ String Modification

Extract "Java" from "I love Java Programming".

Replace all "a" with "o" in "banana".

Remove all spaces from "Hello World".

Convert "java" to uppercase.

Convert "JAVA" to lowercase.

ðŸ“˜ Splitting & Joining

Split "apple,banana,grape" into an array.

Join ["a","b","c"] into "a-b-c".

Split a sentence into words.

Count words in "Hello Java World".

Convert "1234" into an array of characters.

ðŸ“˜ Reversing & Palindrome

Reverse "hello".

Check if "madam" is a palindrome.

Reverse words in "Java is fun".

Print characters of a string one by one.

Reverse string using recursion.

ðŸ“˜ Counting

Count vowels in "education".

Count consonants in "programming".

Count frequency of each character in a string.

Count digits in "Java123".

Count spaces in a sentence.

ðŸ“˜ Comparisons

Compare "java" and "Java" (case-sensitive).

Compare "java" and "Java" (ignore case).

Compare two strings lexicographically.

Find the largest string in an array.

Find the smallest string in an array.

ðŸ“˜ Conversions

Convert int 123 to string.

Convert string "456" to int.

Convert string to char[].

Convert char[] to string.

Format "My name is X and I am Y years old".

ðŸ“˜ Advanced Practice

Remove duplicate characters from "programming".

Find the first non-repeated character in "stress".

Check if two strings are anagrams (listen, silent).

Find substring without using substring() method.

Check if a string contains only digits.
